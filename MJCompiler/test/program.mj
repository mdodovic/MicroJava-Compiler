program MJProgram
	int x, y, z;
	
	bool global_flag;
	char c1, c2, c3, c4;
	
	class Empty {}
	class Empty2 { {} }
			
	const int pi = 3, e = 2;
	const bool flag1 = true;
	const bool flag2 = false;
	const int n_1 = 1, n_2 = 2, n_3 = 3;	
	const char a = 'a';	
	
	int arr1[];
	
	int len, arr2[], sum;
	
	// string class
	class Str { 
		char s[];
		int len;		
		bool readable;
		// int y_, len, 0tt, sup_y;
				
		{
			Str() {
			
			}
		}
		
	}
	
	Str string_a, string_b;
	
	// full classes
	class X { 
		int x; 
		{
			X() int x_; {
			
			}
		}
	}
	class Y { 
		int y;
		bool fy[]; 
		{
			Y() int y_, cnt; bool predefined; {
				
			}
		}
	}

	
	// class extending
	class A { int fa1, fa2; }
	class B extends A { char fb1;  }
	class C extends B { int fc1, fc2; A theA; }
	class D extends A { int fd1; }
	
	// record
	record Board {
		int rows, columns;
		char color[];
	}
	
	record EmptyRecord {}
	
	Board b;
{

	int f0() {
	}

	int f1(char c, bool check) char c1, c2; int l; {
		beginLabel: 
			
			l = 0;
			{
				innerLabel:
					l = 0;
				l = 1;	
			}
			outerLabel: l = 0;		
	}

	void f2(char c, X xarr[], Y yarr[], bool act, A arr[]) int cnt; X x1; Y y1; A a; {
		cnt = 0;
		f1();
	}


	//int k () int c; {
	//	c = 2;
	
		// print(0);
		

	//	return c+2;
	//}

	int main() C objC; {
		
		c1 = 1;
		objC.fc1 = 3;
		objC.theA.fa1 = 2;
		objC.theA.fa2 = - 2;
		
		// arr1 = new int[3];
		
	ArrLabel:	arr1[0] = 6;
		arr1[1] = 5;
		
		arr1[c1] = 3;
		
	//	x = 3;
		
	//	print(1);
	//	
	//	y = 4 + 9 + k();
	//	print(x);

	//	k();
	//	
	//	print(y);
				
	//	return 0;

	}
	
}
